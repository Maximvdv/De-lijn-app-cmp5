<h1>zoek verkooppunten in uw gemeente van De Lijn</h1>

<!--verkooppunten *working*-->

<form method="post" action="/verkooppunten">
    <input type="text" name="verkoopstad" value="">
    <input type="submit" value="zoek verkooppunt">
</form>

<!--halteinformatie *not working*-->


<h1>zoek info over uw halte</h1>

<form method="post" action="/halteinformatie">
    <input type="number" name="halteinfo" value="">
    <input type="submit" value="zoek halteinfo">
</form>

<p>__________________________________________________________________________________________</p>

<!--gemeentelijnen *working*-->

<h1>zoek lijnen in uw gemeente of stad</h1>

<form method="post" action="/gemeentelijnen">
    <input type="number" name="lijnnummer" value="">
    <input type="submit" value="zoek lijnnummer">
</form>


<p>__________________________________________________________________________________________</p>

<!--
Routeberekening *not working*

<h1>Bereken uw route</h1>

<form method="post" action="/berekenRoute">

  <input type="text" name="startpunt" value="sint-niklaas">
  <input type="text" name="eindpunt" value="Elversele, Temse">
  <br>
  <input type="number" name="startx" value="134103">
  <input type="number" name="starty" value="206073">
  <input type="number" name="endx" value="133774">
  <input type="number" name="endy" value="200500">
  <br>
  <input type="text" name="datum" value="11-12-2017">
  <input type="text" name="tijdstip" value="20:00"><br><br>

  <input type="number" name="vertrekkenaankomen" value="1"> vertrekken = 1 / aankomen = 2

  <br><br>
  &lt;!&ndash;<input type="number" name="vertrekkenaankomen" value="2"> aankomen<br><br>&ndash;&gt;

  <input type="text" name="bus" value="on"> met de bus <br>
  <input type="text" name="tram" value="on"> met de tram <br>
  <input type="text" name="metro" value="on"> met de metro <br>
  <input type="text" name="trein" value="on"> met de trein <br>
  <input type="text" name="belbus" value="on"> met de belbus <br> <br>

  <input type="hidden" name="language" value="nl">


  <input type="submit" value="Bereken route">
</form>-->


<!--doorkomende lijnen *working*-->

<h1>zoek doorkomende lijnen </h1>

<form method="post" action="/doorkomendeLijnen">
    <input type="number" name="halteId" value="">
    <input type="submit" value="zoek doorkomende lijn">
</form>

<p>______________________________________________________________</p>

<h1>zoek vertrekkende lijnen vanaf deze halte</h1>

<form method="post" action="/vertrekkendeLijnen">
    Haltenummer: <input type="number" name="halteId" value=""><br>
    <input type="submit" value="zoek vertrekkende lijnen">
</form>

<p>_______________________</p>


<h1>zoek haltes</h1>


<form method="post" action="/zoekenHaltes">
    Plaats: <input type="text" name="zoekHalte" value=""><br>
    <input type="submit" value="zoek haltes">
</form>

<p>________________________</p>


<!--google maps-->



<script src="http://maps.google.se/maps/api/js?sensor=false"></script>

<div class="map-responsive">

    <div id="map"></div>
    <p><input id="origin-input" class="controls" type="text"
              placeholder="Enter an origin location">
    </p>

    <p><input id="destination-input" class="controls" type="text"
              placeholder="Enter a destination location">
    </p>

    <div id="mode-selector" class="controls">
        <input type="radio" name="type" id="changemode-walking" checked="checked">
        <label for="changemode-walking">Walking</label>

        <input type="radio" name="type" id="changemode-transit">
        <label for="changemode-transit">Transit</label>

        <input type="radio" name="type" id="changemode-driving">
        <label for="changemode-driving">Driving</label>
    </div>
    <script>

        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                mapTypeControl: false,
                center: {lat: 51.2298119, lng: 4.4178473},
                zoom: 13
            });

            new AutocompleteDirectionsHandler(map);
        }

        function AutocompleteDirectionsHandler(map) {
            this.map = map;
            this.originPlaceId = null;
            this.destinationPlaceId = null;
            this.travelMode = 'TRANSIT';
            var originInput = document.getElementById('origin-input');
            var destinationInput = document.getElementById('destination-input');
            var modeSelector = document.getElementById('mode-selector');
            this.directionsService = new google.maps.DirectionsService;
            this.directionsDisplay = new google.maps.DirectionsRenderer;
            this.directionsDisplay.setMap(map);

            var originAutocomplete = new google.maps.places.Autocomplete(
                originInput, {placeIdOnly: true});
            var destinationAutocomplete = new google.maps.places.Autocomplete(
                destinationInput, {placeIdOnly: true});

            this.setupClickListener('changemode-walking', 'WALKING');
            this.setupClickListener('changemode-transit', 'TRANSIT');
            this.setupClickListener('changemode-driving', 'DRIVING');


            //mogelijkheid tot enkel gebruiken van 'TRANSIT' voor openbaar vervoer

            this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
            this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
        }

        AutocompleteDirectionsHandler.prototype.setupClickListener = function(id, mode) {
            var radioButton = document.getElementById(id);
            var me = this;
            radioButton.addEventListener('click', function() {
                me.travelMode = mode;
                me.route();
            });
        };

        AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
            var me = this;
            autocomplete.bindTo('bounds', this.map);
            autocomplete.addListener('place_changed', function() {
                var place = autocomplete.getPlace();
                if (!place.place_id) {
                    window.alert("Please select an option from the dropdown list.");
                    return;
                }
                if (mode === 'ORIG') {
                    me.originPlaceId = place.place_id;
                } else {
                    me.destinationPlaceId = place.place_id;
                }
                me.route();
            });

        };

        AutocompleteDirectionsHandler.prototype.route = function() {
            if (!this.originPlaceId || !this.destinationPlaceId) {
                return;
            }
            var me = this;

            this.directionsService.route({
                origin: {'placeId': this.originPlaceId},
                destination: {'placeId': this.destinationPlaceId},
                travelMode: this.travelMode
            }, function(response, status) {
                if (status === 'OK') {
                    me.directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        };

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsDG48AwuIJ93xVPg4T7-qf-JZ-cq0x_s&libraries=places&callback=initMap"
            async defer></script>

</div>