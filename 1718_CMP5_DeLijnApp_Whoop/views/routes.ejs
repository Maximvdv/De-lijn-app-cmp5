<% include header %>
<main>

    <div class="wrapper">
        <a href="/opties"><img src="/img/delijn-logo.png" class="delijn-logo"></a>
        <img src="/img/routeplannerbackground.png" class="enter">
        <!--
            <form class="halte-form">

              <div class="halte-grid">

                <img src="/img/map-pin.png" class="vertrekpunt-icon">
                <div class="route-item vertrekpunt">
                    <label for="vetrekpunt"></label>
                    <input type="text" name="vertrekpunt" id="vertrekpunt" placeholder="Vertrekpunt" required />
                </div>


                <img src="/img/bestemming-icon.png" class="bestemming-icon">
                <div class="route-item bestemming">
                    <label for="bestemming"></label>
                    <input name="bestemming"  type="text" id="bestemming" placeholder="Bestemming" required />
                </div>


              </div>
             </form>
        -->
        <!--map init-->
        <script src="http://maps.google.se/maps/api/js?sensor=false"></script>
        <div class="mapwrapper">

            <p><input id="origin-input" class="controls" type="text"
                      placeholder="Vertrekpunt">
            </p>
            <br>
            <p><input id="destination-input" class="controls" type="text"
                      placeholder="Bestemming">
            </p>

            <div id="mode-selector" class="controls-mode">
                <input type="hidden" name="type" id="changemode-walking" checked="checked">


                <input type="hidden" name="type" id="changemode-transit">


                <input type="hidden" name="type" id="changemode-driving">

            </div>

            <div id="map"></div>

            <script>
                // This example requires the Places library. Include the libraries=places
                // parameter when you first load the API. For example:
                // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

                function initMap() {
                    var map = new google.maps.Map(document.getElementById('map'), {
                        mapTypeControl: false,
                        center: {lat: 51.2298951, lng: 4.4155246},
                        zoom: 13
                    });

                    new AutocompleteDirectionsHandler(map);
                }

                /**
                 * @constructor
                 */
                function AutocompleteDirectionsHandler(map) {
                    this.map = map;
                    this.originPlaceId = null;
                    this.destinationPlaceId = null;
                    this.travelMode = 'TRANSIT';
                    var originInput = document.getElementById('origin-input');
                    var destinationInput = document.getElementById('destination-input');
                    var modeSelector = document.getElementById('mode-selector');
                    this.directionsService = new google.maps.DirectionsService;
                    this.directionsDisplay = new google.maps.DirectionsRenderer;
                    this.directionsDisplay.setMap(map);

                    var originAutocomplete = new google.maps.places.Autocomplete(
                        originInput, {placeIdOnly: true});
                    var destinationAutocomplete = new google.maps.places.Autocomplete(
                        destinationInput, {placeIdOnly: true});

                    this.setupClickListener('changemode-walking', 'TRANSIT');
                    this.setupClickListener('changemode-transit', 'TRANSIT');
                    this.setupClickListener('changemode-driving', 'TRANSIT');

                    this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
                    this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

                    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
                    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
                    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
                }

                // Sets a listener on a radio button to change the filter type on Places
                // Autocomplete.
                AutocompleteDirectionsHandler.prototype.setupClickListener = function(id, mode) {
                    var radioButton = document.getElementById(id);
                    var me = this;
                    radioButton.addEventListener('click', function() {
                        me.travelMode = mode;
                        me.route();
                    });
                };

                AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
                    var me = this;
                    autocomplete.bindTo('bounds', this.map);
                    autocomplete.addListener('place_changed', function() {
                        var place = autocomplete.getPlace();
                        if (!place.place_id) {
                            window.alert("Please select an option from the dropdown list.");
                            return;
                        }
                        if (mode === 'ORIG') {
                            me.originPlaceId = place.place_id;
                        } else {
                            me.destinationPlaceId = place.place_id;
                        }
                        me.route();
                    });

                };

                AutocompleteDirectionsHandler.prototype.route = function() {
                    if (!this.originPlaceId || !this.destinationPlaceId) {
                        return;
                    }
                    var me = this;

                    this.directionsService.route({
                        origin: {'placeId': this.originPlaceId},
                        destination: {'placeId': this.destinationPlaceId},
                        travelMode: this.travelMode
                    }, function(response, status) {
                        if (status === 'OK') {
                            me.directionsDisplay.setDirections(response);
                        } else {
                            window.alert('Directions request failed due to ' + status);
                        }
                    });
                };

            </script>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCsDG48AwuIJ93xVPg4T7-qf-JZ-cq0x_s&libraries=places&callback=initMap"
                    async defer></script>


        </div>

    </div>
</main>
